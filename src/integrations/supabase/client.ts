// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = import.meta.env.VITE_SUPABASE_URL || "https://lfsdqyvvboapsyeauchm.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = import.meta.env.VITE_SUPABASE_PUBLISHABLE_KEY || "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imxmc2RxeXZ2Ym9hcHN5ZWF1Y2htIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTYzMjA3ODYsImV4cCI6MjA3MTg5Njc4Nn0.8lE_UEjrIviFz6nygL7HocGho-aUG9YH1NCi6y_CrFk";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    storage: localStorage,
    persistSession: true,
    autoRefreshToken: true,
    detectSessionInUrl: true,
  },
  global: {
    headers: {
      'x-client-info': 'supabase-js-web',
    },
      fetch: (url, options = {}) => {
        // Adaptive timeout based on request type and detected latency
        let timeout = 30000; // Default 30s
        
        if (url.includes('/functions/')) {
          // Edge functions get longer timeout (90s for high-latency regions)
          timeout = 90000;
        } else if (url.includes('/auth/v1/token')) {
          // Auth operations get extended timeout for regional issues
          timeout = 45000;
        }
        
        return fetch(url, {
          ...options,
          signal: AbortSignal.timeout(timeout),
        }).catch(error => {
          console.error('Supabase fetch error:', error);
          if (error.name === 'TimeoutError' || error.name === 'AbortError') {
            throw new Error(`Request timed out after ${timeout/1000} seconds. This may be due to network conditions in your region. Please try again.`);
          }
          if (error.message?.includes('Failed to fetch') || error.message?.includes('NetworkError')) {
            throw new Error('Network connection failed. This may be due to regional connectivity issues. Please check your internet connection and try again.');
          }
          throw error;
        });
      },
  },
  db: {
    schema: 'public',
  },
  realtime: {
    params: {
      eventsPerSecond: 10,
    },
  },
});